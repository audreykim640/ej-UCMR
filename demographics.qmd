---
title: "Demographic joins"
format: html
editor: visual
---

## This is my project

```{r loading packages, echo=F, warning=F}
library(dplyr)
library(ggplot2)
# install.packages("sf") # https://github.com/r-spatial/sf/issues/2035
library(sf)
library(tidycensus)
options(tigris_use_cache = TRUE)
library(tidyr)
library(purrr)
library(lwgeom)
library(stringr)
library(moderndive)
# devtools::install_github(“rstudio/gt”)
library(knitr)
library(kableExtra)
library(ggfortify)
library(performance)
```

```{r loading data, warning=F, message=F}

# variables from https://api.census.gov/data/2020/acs/acs5/groups.html
bg_shapes <- get_acs(
  geography = "block group", 
  variables = c("B02001_001", "B02008_001", "B02009_001", "B02010_001", 
                "B02011_001", "B19013_001", "B03003_001", "B03003_003"),
  state = "CA", 
  year = 2020,
  cache_table = TRUE,
  geometry = TRUE
) 

# CSV is too large to push -- download from https://www.epa.gov/dwucmr/occurrence-data-unregulated-contaminant-monitoring-rule#4
UCMR <- read.csv("data/UCMR4_All.csv") %>% 
  filter(PWSName %in% c("Pala North", "Pauma", "Pechanga", "Redding Rancheria", 
                        "Viejas Community System") | State == "CA") 

govwatershapes <- st_read("data/SABL_Public_230403") %>% 
  rename("PWSID" = "SABL_PWSID") %>%
  filter(PWSID %in% unique(UCMR$PWSID)) %>% 
  st_transform(4269)

# .gpkg is too large to push -- download from https://github.com/SimpleLab-Inc/wsb
SLwatershapes <- st_read("data/temm.gpkg") %>% 
  # https://community.rstudio.com/t/how-to-open-a-geopackage-file/41027
  filter(pwsid %in% unique(UCMR$PWSID))

```

```{r supplementing PWS data, warning=F, message=F}
missingPWSs <- setdiff(unique(UCMR$PWSID), unique(govwatershapes$PWSID)) %>% 
  map(function (x) {ifelse(substr(x,1,1) == "9", paste0("0", x), x)}) 

missingshapes <- SLwatershapes %>% 
  filter(pwsid %in% missingPWSs) %>% 
  rename("PWSID" = "pwsid",
         "WATER_SY_1" = "pws_name",
         "geometry" = "geom") %>% 
  select(PWSID, WATER_SY_1, geometry) %>% 
  st_transform(4269)

PWS <- bind_rows(missingshapes, govwatershapes)
```

B02001_001 Race total B02001_002 White alone\
B02009_001 Black alone or in combination B02010_001 Native American alone or in combination B02011_001 Asian alone or in combination B19013_001 median household income Hispanic total: B03003_001 B03003_003 yes hispanic or latino

```{r transforming demographics, echo=F, warning=F, message=F}
bg_shapes_wide <- bg_shapes %>% 
  select(-moe) %>% 
  pivot_wider(names_from = "variable", values_from = "estimate") %>% 
  rename(Total = B02001_001,	
        White = B02008_001,	
        Black = B02009_001,
        Indigenous = B02010_001,	
        Asian = B02011_001,
        Total_Hisp = B03003_001,	
        Hisp_Lat = B03003_003,
        Med_Income = B19013_001) #%>% 
  # mutate(White = White / Total,
  #        Black = Black / Total,
  #        Indigenous = Indigenous / Total,
  #        Asian = Asian / Total,
  #        Hisp_Lat = Hisp_Lat / Total_Hisp
  #        )

  # Save until after having joined since weighted averages won't work with props
  # Want to use counts

# block_shapes_tall_props <- block_shapes_wide %>% 
#   pivot_longer(c(White, Black, Asian, Indigenous, Hisp_Lat), 
#                names_to = "race", values_to = "prop")
# 
# ggplot(block_shapes_tall2, aes(x = race, y = prop, color = race)) + geom_col()
# 
# block_shapes_vals <- block_shapes %>% 
#   filter(!(Total == 0 & Total_Hisp == 0))
```

```{r joining and avging demographics, echo=F, warning=F, message=F}
# below lines sourced from https://github.com/r-spatial/sf/issues/493
sf_use_s2(FALSE) # flattens shapes

# join <- watershapes %>% 
#   inner_join(UCMR_CA, by = c("pwsid" = "PWSID")) %>% 
#   select(pwsid, PWSName, primacy_agency_code, primary_source_code, tier, FacilityWaterType, CollectionDate, Contaminant, MRL, AnalyticalResultsSign, AnalyticalResultValue.µg.L.) %>% 
#   st_intersection(bg_shapes) %>% 
#   mutate(pwi_county = paste0(pwsid, "-", GEOID))


# PWS_demos_joined <- st_join(govwatershapes, bg_shapes_wide)

shape_intersections <- st_intersection(PWS, bg_shapes_wide) %>% 
  mutate(PWS_bg = paste0(PWSID, "-", GEOID))


PWS_aw_demographics <- shape_intersections %>% 
  #--- get area ---#
  mutate(area = as.numeric(st_area(.))) %>% 
  #--- get area-weight by HUC unit ---#
  group_by(PWSID) %>% 
  mutate(weight = area / sum(area)) %>% 
  #--- calculate area-weighted corn acreage by HUC unit ---#
  # 'aw' stands for area-weighted 
  summarize(Total_aw = sum(weight * Total),
            White_aw = sum(weight * White),
            Black_aw = sum(weight * Black),
            Indig_aw = sum(weight * Indigenous),
            Asian_aw = sum(weight * Asian),
            Total_HispLat_aw = sum(weight * Total_Hisp),
            HispLat_aw = sum(weight * Hisp_Lat),
            MedIncome_aw = sum(weight * Med_Income)
            )

# saving for posterity (to not have to rerun code)
# st_write(PWS_aw_demographics, dsn = 'data/joinedPWSdemos/joinedPWSdemos.shp')
```

```{r wrangling demographics, echo=F, warning=F, message=F}
PWSdemog <- PWS_aw_demographics %>% 
  mutate(White_prop = White_aw / Total_aw,
            Black_prop = Black_aw / Total_aw,
            Indig_prop = Indig_aw / Total_aw,
            Asian_prop = Asian_aw / Total_aw,
            HispLat_prop = HispLat_aw / Total_HispLat_aw)

PWSdemog <- PWSdemog %>% 
  st_drop_geometry() %>% # max.col() couldn't work with 
  mutate(Predom = colnames(.[10:14])[max.col(.[10:14])]) %>% 
  # above line courtesy of https://stackoverflow.com/questions/17735859/for-each-row-return-the-column-name-of-the-largest-value
  right_join(PWSdemog) %>% 
  select(PWSID, MedIncome_aw, White_prop, Black_prop,
         Indig_prop, Asian_prop, HispLat_prop, Predom)
```

```{r full data set (joining w UCMR), echo=F, warning=F, message=F}
contamsOfInterest <- c("germanium", "manganese", "HAA6Br", "HAA9")

full <- UCMR %>% 
  select(PWSID, PWSName, Contaminant, AnalyticalResultsSign,
         AnalyticalResultValue.µg.L.) %>% 
  filter(Contaminant %in% contamsOfInterest) %>% 
  inner_join(PWSdemog) %>% 
  pivot_longer(c(White_prop, Black_prop, Asian_prop, Indig_prop), 
                names_to = "RaceEth", values_to = "Prop") %>% 
  rename(ContamLevel = AnalyticalResultValue.µg.L.,
         RelativetoMRL = AnalyticalResultsSign,
         MedIncome = MedIncome_aw) %>% 
  mutate(Predom = substr(Predom, 1, nchar(Predom)-5),
         RaceEth = substr(RaceEth, 1, nchar(RaceEth)-5),
         RaceEth = factor(RaceEth),
         Contaminant = factor(Contaminant, 
                                 levels = c("HAA6Br", "HAA9", "manganese", "germanium"))) 
```

## Contaminants vs Races/Ethnicities

### Plotting

```{r plotting contams and race/eth, echo=F, warning=F, message=F}
ggplot(full, aes(x = Prop, y = ContamLevel)) +
  geom_point(alpha = 0.08) +
  geom_smooth(se = FALSE, formula = y~x, color = "goldenrod") +
  facet_grid(Contaminant ~ RaceEth, switch = "both") +
  scale_y_log10() +
  theme_classic() +
  theme(axis.text.x = element_text(angle = -90, vjust = 0.4))
```

```{r plotting contams and income, echo=F, warning=F, message=F}
ggplot(full, aes(x = MedIncome, y = ContamLevel)) +
  geom_point(alpha = 0.08) +
  geom_smooth(se = FALSE, formula = y~x, color = "goldenrod") +
  facet_grid(~ Contaminant) +
  scale_y_log10() +
  theme_classic() +
  theme(axis.text.x = element_text(angle = -90, vjust = 0.4))
```

### Regressions

In the following analyses, I am mainly testing for the following hypotheses: 

- Null hypothesis: The relationship between the amount of germanium in the water and proportion of race will NOT depend on (change with) the race.
- Alternative hypothesis: The relationship between the amount of germanium in the water and proportion of race WILL depend on (change with) the race.

#### Germanium levels vs Race/ethnicity served by PWS proportions 

```{r}
germanium <- full %>% 
  filter(Contaminant == "germanium")

germanium_model <- lm(ContamLevel ~ Prop_sq * RaceEth, data = germanium)
get_regression_table(germanium_model) # %>% 
  # kable() %>%
  # kable_minimal()

germ_residuals <- get_regression_points(germanium_model)

germanium <- germanium %>% 
  mutate(Prop_sq = Prop^.5)
germanium_model2 <- lm(ContamLevel ~ Prop_sq * RaceEth, data = germanium)
germ_residuals2 <- get_regression_points(germanium_model2)



ggplot(germ_residuals2, aes(sample = residual)) +
  geom_qq_line() +
  geom_qq() +
  facet_wrap(~ RaceEth)
# +
#   geom_smooth(se = FALSE, formula = y~x, color = "goldenrod") +
#   facet_grid(Contaminant ~ RaceEth, switch = "both") +
#   scale_y_log10() +
#   theme_classic() +
#   theme(axis.text.x = element_text(angle = -90, vjust = 0.4))

```

The baseline in this model is the proportion of Asian respondents, which observes a staistically significant (p-value $\approx$ 0) negative correlation with the level of germanium. According to this model for each each percent increase of Asian respondents, we would expect to observe, on average, the concentration of germanium in the water decrease by approximately 0.040 $\mu$g/mL. While the p-value is negligible, we cannot say that it equals zerol it is only very close.

For germanium, there appears to be sufficient evidence to reject the null hypothesis that the race does not have an impact on the relationship between proportion of race and concentration of the contaminant. Both white and Hispanic/Latino populations experience an increase in germanium concentration in water as the proportion of those races increase. 

For each percent increase in the proportion of people that the water system being Hispanic/Latino, we would expect to observe, on average, the concentration of germanium in the water *increase* by (-4.016 + 5.688 $\approx$ ) 0.017 $\mu$g/mL. The rate of increase becomes (-4.016 + 5.999 $\approx$ ) 0.020 $\mu$g/mL for each percent increase in the proportion of served people being white.

The relationship between the proportions of Black and Indigenous populations and contaminant levels visually seems to observe a similar pattern demostrated by Asian populations. Statistically, there is no evidence that there is difference in either slope or intercept for these three groups.

```{r}
manganese <- full %>% 
  filter(Contaminant == "manganese")
  
manganese_model <- lm(ContamLevel ~ Prop * RaceEth, data = manganese)
get_regression_table(manganese_model)

```

```{r}
HAA6Br <- full %>% 
  filter(Contaminant == "HAA6Br")
  
HAA6Br_model <- lm(ContamLevel ~ Prop * RaceEth, data = HAA6Br)
get_regression_table(HAA6Br_model)
```

```{r}
HAA9 <- full %>% 
  filter(Contaminant == "HAA9")
  
HAA9_model <- lm(ContamLevel ~ Prop * RaceEth, data = HAA9)
get_regression_table(HAA9_model)
```

```{r}
ggplot(full %>% filter(ContamLevel != 0), aes(x = Prop, y = ContamLevel, color = Contaminant)) +
  geom_point(alpha = 0.1) +
  geom_smooth(se = FALSE, formula = y~x) +
  scale_y_log10() +
  facet_wrap(~ RaceEth)
```

```{r}
ggplot(full, aes(x = Predom, y = ContamLevel)) +
  geom_violin() +
  stat_summary(fun.y=median, geom="point", color="goldenrod", fill="goldenrod") +
  stat_summary(fun.y=mean, geom="point", color="green", fill="green") +
  scale_y_log10() +
  facet_wrap(~ Contaminant) +
  theme_bw()
```
