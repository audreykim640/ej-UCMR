---
title: "Appendix B"
format: html
editor: visual
execute:
  results: false
  eval: false
---
# Appendix B

All code whose results are shown in the study. (This document is just for code transparency, not to display outputs from the code.)

```{r loading libraries}
library(dplyr)
library(ggplot2)
library(knitr)
library(kableExtra)
library(ggfortify)
library(performance)
```

## Joining data

```{r, eval=FALSE}

## -------SOURCING DATA--------
# variables from https://api.census.gov/data/2020/acs/acs5/groups.html
bg_shapes <- get_acs(
  geography = "block group", 
  variables = c("B02001_001", "B02008_001", "B02009_001", "B02010_001", 
                "B02011_001", "B19013_001", "B03003_001", "B03003_003"),
  state = "CA", 
  year = 2020,
  cache_table = TRUE,
  geometry = TRUE
) 

# CSV is too large to push -- download from https://www.epa.gov/dwucmr/occurrence-data-unregulated-contaminant-monitoring-rule#4
UCMR <- read.csv("data/UCMR4_All.csv") %>% 
  filter(PWSName %in% c("Pala North", "Pauma", "Pechanga", "Redding Rancheria", 
                        "Viejas Community System") | State == "CA") 

govwatershapes <- st_read("data/SABL_Public_230403") %>% 
  rename("PWSID" = "SABL_PWSID") %>%
  filter(PWSID %in% unique(UCMR$PWSID)) %>% 
  st_transform(4269)

# .gpkg is too large to push -- download from https://github.com/SimpleLab-Inc/wsb
SLwatershapes <- st_read("data/temm.gpkg") %>% 
  # https://community.rstudio.com/t/how-to-open-a-geopackage-file/41027
  filter(pwsid %in% unique(UCMR$PWSID))


## -------COMBINING CA PWS AND SIMPLELAB GEOMETRIES--------
missingPWSs <- setdiff(unique(UCMR$PWSID), unique(govwatershapes$PWSID)) %>% 
  map(function (x) {ifelse(substr(x,1,1) == "9", paste0("0", x), x)}) 

missingshapes <- SLwatershapes %>% 
  filter(pwsid %in% missingPWSs) %>% 
  rename("PWSID" = "pwsid",
         "WATER_SY_1" = "pws_name",
         "geometry" = "geom") %>% 
  select(PWSID, WATER_SY_1, geometry) %>% 
  st_transform(4269)

PWS <- bind_rows(missingshapes, govwatershapes)

## ACS variable codes 
# B02001_001 Race total B02001_002 White alone\
# B02009_001 Black alone or in combination 
# B02010_001 Native American alone or in combination 
# B02011_001 Asian alone or in combination 
# Hispanic total: B03003_001 
# B03003_003 yes hispanic or latino

## -------TRANSFORMING DEMOGRAPHICS DATA--------
bg_shapes_wide <- bg_shapes %>% 
  select(-moe) %>% 
  pivot_wider(names_from = "variable", values_from = "estimate") %>% 
  rename(Total = B02001_001,	
         White = B02008_001,	
         Black = B02009_001,
         Indigenous = B02010_001,	
         Asian = B02011_001,
         Total_Hisp = B03003_001,	
         Hisp_Lat = B03003_003,
         Med_Income = B19013_001) #%>% 
# mutate(White = White / Total,
#        Black = Black / Total,
#        Indigenous = Indigenous / Total,
#        Asian = Asian / Total,
#        Hisp_Lat = Hisp_Lat / Total_Hisp
#        )

# Save until after having joined since weighted averages won't work with props
# Want to use counts

# block_shapes_tall_props <- block_shapes_wide %>% 
#   pivot_longer(c(White, Black, Asian, Indigenous, Hisp_Lat), 
#                names_to = "race", values_to = "prop")
# 
# ggplot(block_shapes_tall2, aes(x = race, y = prop, color = race)) + geom_col()
# 
# block_shapes_vals <- block_shapes %>% 
#   filter(!(Total == 0 & Total_Hisp == 0))

## -------JOINING AND AVERAGING DEMOGRAPHICS--------
# below line sourced from https://github.com/r-spatial/sf/issues/493
sf_use_s2(FALSE) # flattens shapes

# join <- watershapes %>% 
#   inner_join(UCMR_CA, by = c("pwsid" = "PWSID")) %>% 
#   select(pwsid, PWSName, primacy_agency_code, primary_source_code, tier, FacilityWaterType, CollectionDate, Contaminant, MRL, AnalyticalResultsSign, AnalyticalResultValue.µg.L.) %>% 
#   st_intersection(bg_shapes) %>% 
#   mutate(pwi_county = paste0(pwsid, "-", GEOID))


# PWS_demos_joined <- st_join(govwatershapes, bg_shapes_wide)

shape_intersections <- st_intersection(PWS, bg_shapes_wide) %>% 
  mutate(PWS_bg = paste0(PWSID, "-", GEOID))

PWS_aw_demographics <- shape_intersections %>% 
  #--- get area ---#
  mutate(area = as.numeric(st_area(.))) %>% 
  #--- get area-weight by HUC unit ---#
  group_by(PWSID) %>% 
  mutate(weight = area / sum(area)) %>% 
  #--- calculate area-weighted corn acreage by HUC unit ---#
  # 'aw' stands for area-weighted 
  summarize(Total_aw = sum(weight * Total),
            White_aw = sum(weight * White),
            Black_aw = sum(weight * Black),
            Indig_aw = sum(weight * Indigenous),
            Asian_aw = sum(weight * Asian),
            Total_HispLat_aw = sum(weight * Total_Hisp),
            HispLat_aw = sum(weight * Hisp_Lat),
            MedIncome_aw = sum(weight * Med_Income)
  )

# saving for posterity (to not have to rerun code)
# st_write(PWS_aw_demographics, dsn = 'data/joinedPWSdemos/joinedPWSdemos.shp')

## -------WRANGLING DEMOGRAPHICS--------
PWSdemog <- PWS_aw_demographics %>% 
  mutate(White_prop = White_aw / Total_aw,
         Black_prop = Black_aw / Total_aw,
         Indig_prop = Indig_aw / Total_aw,
         Asian_prop = Asian_aw / Total_aw,
         HispLat_prop = HispLat_aw / Total_HispLat_aw)

PWSdemog <- PWSdemog %>% 
  st_drop_geometry() %>% # max.col() couldn't work with 
  mutate(Predom = colnames(.[10:13])[max.col(.[10:13])]) %>% 
  # above line courtesy of https://stackoverflow.com/questions/17735859/for-each-row-return-the-column-name-of-the-largest-value
  right_join(PWSdemog) %>% 
  select(PWSID, MedIncome_aw, White_prop, Black_prop,
         Indig_prop, Asian_prop, HispLat_prop, Predom)

## -------JOINING W UCMR--------
contamsOfInterest <- c("germanium", "manganese", "HAA6Br", "HAA9")

full <- UCMR %>% 
  select(PWSID, PWSName, Contaminant, AnalyticalResultsSign,
         AnalyticalResultValue.µg.L.) %>% 
  filter(Contaminant %in% contamsOfInterest) %>% 
  inner_join(PWSdemog) %>% 
  pivot_longer(c(White_prop, Black_prop, Asian_prop, Indig_prop), 
               names_to = "RaceEth", values_to = "Prop") %>% 
  rename(ContamLevel = AnalyticalResultValue.µg.L.,
         RelativetoMRL = AnalyticalResultsSign,
         MedIncome = MedIncome_aw) %>% 
  filter(ContamLevel != 0) %>% 
  mutate(Predom = substr(Predom, 1, nchar(Predom)-5),
         RaceEth = substr(RaceEth, 1, nchar(RaceEth)-5),
         RaceEth = ifelse(RaceEth == "Indig", "Indigenous", RaceEth),
         RaceEth = ifelse(RaceEth == "White", "white", RaceEth),
         RaceEth = factor(RaceEth),
         Contaminant = ordered(Contaminant, 
                              levels = c("germanium","manganese", "HAA6Br", "HAA9")),
         LogLevel = log10(ContamLevel),
         HLFiftyPer = ifelse(HispLat_prop >= median(HispLat_prop), "Above", "Below"),
         HLFiftyPer = factor(HLFiftyPer, levels = c("Above", "Below"))) 

write.csv(full, "full.csv", row.names=FALSE)

```


Description of data joining:
I began by filtering the public water system boundary data based on what was available in the UCMR data to pare down the spatial data to only what will be relevant for the analysis. Then, I joined it with the spatial demographics data from the American Community Survey. This join was via spatial joins, which are computationally expensive and slow. (Joining PWS and UCMR data would create a larger dataset, which would be even slower, so I started here.) 
Using the sf package, I found which block groups overlapped each PWS. Then for each PWS, I attributed a proportion (or weight) to each block group, representing how much of the PWS boundary it intersected with. For instance, if part of block group 1 covered a quarter of the PWS in question, block group 1 received a 0.25. Then, other block groups overlapping with the PWS are assigned corresponding weights for that PWS. It is feasible that block groups appear multiple times in the dataset, receiving weights for different PWSs that they overlap with. 
After finding the weights, the weight for block group 1’s overlap with the PWS in questions is multiplied by the race, ethnicity, and total respondent counts. This statistic by weight multiplication occurs for each PWS-block group intersection, with PWSs possibly having multiple entries if it overlaps with multiple block groups. Then, for each PWS, all of the weighted statistics for that PWS are added together to create a cumulative weighted average for each of the statistics. 
	The result of this join is a dataframe with each PWS appearing once with spatial data and weighted average counts of Asian, Black, Indigenous, and white respondents as well as a weighted average total of respondents to the race question. Similarly, the data contains a weighted average count of Hispanic/Latin(o/a) respondents and a weighted average total count of respondents to the Hispanic/Latin(o/a) question. These weighted averages are often rough estimates, as they make the assumption that the distribution of counts is even and consistent throughout an area whereas in reality, it’s possible that people are not evenly distributed within an area. For instance, it’s possible that there exist no people in one particular overlapping part of a block group and PWS but the counts from that block group will still be weighted and attributed to that PWS.
	With this joined dataset, I performed some further data wrangling for later data analysis, including converting race/ethnicity counts to proportions to create more values that are more comparable across PWSs and creating a categorical variable that lists the race that makes up the greatest proportion of the population that a PWS serves (according to this data). I additionally siphoned ethnicity into a categorical variable indicating if a public water system is “Above” or “Below” the 50th percentile for proportion of Hispanic or Latino/a constituents.
	Then I joined this PWS-demographics dataset to the UCMR data using the dplyr package (like most of this data wrangling work). 

## Race tests

### Racial groupings regressions

```{r plotting contams and race/eth, echo=F, warning=F, message=F}
ggplot(full, aes(x = Prop, y = LogLevel)) +
  geom_point(alpha = 0.1) +
  geom_smooth(se = FALSE, formula = y~x, color = "goldenrod") +
  facet_grid(Contaminant ~ RaceEth, switch = "both", scale = "free") +
  theme_classic() +
  theme(axis.text.x = element_text(size = 7)) +
  scale_x_continuous(labels = scales::percent) +
  labs(title = "Contaminant concentrations by racial makeup",
       x = "Proportion of indicated race",
       y = "Concentration (log-transformed \u03bcg/L)")
```

In the following analyses, I am mainly testing for the following hypotheses:

-   Null hypothesis: The relationship between the amount of germanium in the water and proportion of race will NOT depend on (change with) the race.
-   Alternative hypothesis: The relationship between the amount of germanium in the water and proportion of race WILL depend on (change with) the race.

The basic form of the output is

<!-- ```{=tex} -->
<!-- \begin{split} -->

<!-- E( \operatorname{LogLevel} ) = &\alpha + \beta_{1}(\operatorname{Prop}) + \beta_{2}(\operatorname{RaceEth}_{\operatorname{Black}}) + \beta_{3}(\operatorname{RaceEth}_{\operatorname{Indig}}) + \beta_{4}(\operatorname{RaceEth}_{\operatorname{White}}) + \\ -->
<!-- & + \beta_{5}(\operatorname{Prop} \times \operatorname{RaceEth}_{\operatorname{Black}}) + \beta_{6}(\operatorname{Prop} \times \operatorname{RaceEth}_{\operatorname{Indig}}) + \beta_{7}(\operatorname{Prop} \times \operatorname{RaceEth}_{\operatorname{White}}) -->

<!-- \end{split} -->
<!-- ``` -->

where $\alpha$ and the $\beta$s are the values found from the regression, and each $\operatorname{RaceEth}_{\operatorname{x}}$ serves as an "on/off" switch where if the RaceEth variable is "x" (e.g., Black) at that time, the $\operatorname{RaceEth}_{\operatorname{Black}}$ will equal 1 and all others will equal 0, so the coefficients corresponding with Black will have an impact while the other coefficients will be "turned off".

#### Germanium levels vs Race served by PWS proportions

```{r}
germanium <- full %>% 
  filter(Contaminant == "germanium")

ggplot(germanium, aes(x = Prop, y = LogLevel)) +
  geom_point(alpha = 1) +
  geom_smooth(se = FALSE, method = "lm", color = "goldenrod") +
  facet_grid(~ RaceEth, scale = "free") +
  theme_classic() +
  scale_x_continuous(labels = scales::percent)

germanium_model <- glm(LogLevel ~ Prop * RaceEth, data = germanium)
summary(germanium_model)
```

<!-- ```{=tex} -->
<!-- \begin{split} -->

<!-- E( \operatorname{LogLevel} ) = &-0.056 + -0.80(\operatorname{Prop}) + -0.042(\operatorname{RaceEth}_{\operatorname{Black}}) + -0.052(\operatorname{RaceEth}_{\operatorname{Indig}}) + -0.47(\operatorname{RaceEth}_{\operatorname{White}}) \\ -->
<!-- & + 0.11(\operatorname{Prop} \times \operatorname{RaceEth}_{\operatorname{Black}}) + -0.82(\operatorname{Prop} \times \operatorname{RaceEth}_{\operatorname{Indig}}) + 1.3(\operatorname{Prop} \times \operatorname{RaceEth}_{\operatorname{White}}) -->

<!-- \end{split} -->
<!-- ``` -->

Since the response variable here is the log (base-10) of the contaminant concentration, the coefficients are most interpretable when placed as the coefficent of 10 to undo the transformation. The baseline in this model is the proportion of Asian respondents, which observes a staistically significant (p-value $\approx$ 0) negative correlation with the level of germanium. According to this model for each each percent increase of Asian respondents, we would expect to observe, on average, the concentration of germanium in the water decrease by approximately 0.040 $\mu$g/L. While the p-value is negligible, we cannot say that it equals zerol it is only very close.

For germanium, there appears to be sufficient evidence to reject the null hypothesis that the race does not have an impact on the relationship between proportion of race and concentration of the contaminant. Both white and Hispanic/Latino populations experience an increase in germanium concentration in water as the proportion of those races increase.

For each percent increase in the proportion of people that the water system being Hispanic/Latino, we would expect to observe, on average, the concentration of germanium in the water *increase* by (-4.016 + 5.688 $\approx$ ) 0.017 $\mu$g/L. The rate of increase becomes (-4.016 + 5.999 $\approx$ ) 0.020 $\mu$g/L for each percent increase in the proportion of served people being white.

The relationship between the proportions of Black and Indigenous populations and contaminant levels visually seems to observe a similar pattern demonstrated by Asian populations. Statistically, there is no evidence that there is difference in either slope or intercept for these three groups.

#### Manganese levels vs Race served by PWS proportions

```{r}
manganese <- full %>% 
  filter(Contaminant == "manganese")

ggplot(manganese, aes(x = Prop, y = LogLevel)) +
  geom_point(alpha = 1) +
  geom_smooth(se = FALSE, method = "lm", color = "goldenrod") +
  facet_grid(~ RaceEth, switch = "both", scale = "free") +
  theme_classic() +
  scale_x_continuous(labels = scales::percent)

manganese_model <- glm(LogLevel ~ Prop * RaceEth, data = manganese)
summary(manganese_model)
```

#### HAA6Br levels vs Race served by PWS proportions

<!-- ```{=tex} -->
<!-- \begin{split} -->

<!-- E( \operatorname{LogLevel} ) = &0.42 + -0.19(\operatorname{Prop}) + -0.047(\operatorname{RaceEth}_{\operatorname{Black}}) + -0.027(\operatorname{RaceEth}_{\operatorname{Indig}}) + 0.0023(\operatorname{RaceEth}_{\operatorname{White}}) \\ -->
<!-- & + 0.45(\operatorname{Prop} \times \operatorname{RaceEth}_{\operatorname{Black}}) + 0.066(\operatorname{Prop} \times \operatorname{RaceEth}_{\operatorname{Indig}}) + 0.14(\operatorname{Prop} \times \operatorname{RaceEth}_{\operatorname{White}}) -->

<!-- \end{split} -->
<!-- ``` -->

```{r}
HAA6Br <- full %>% 
  filter(Contaminant == "HAA6Br")

ggplot(HAA6Br, aes(x = Prop, y = LogLevel)) +
  geom_point(alpha = 1) +
  geom_smooth(se = FALSE, method = "lm", color = "goldenrod") +
  facet_grid(~ RaceEth, scale = "free") +
  theme_classic() +
  scale_x_continuous(labels = scales::percent)

HAA6Br_model <- glm(LogLevel ~ Prop * RaceEth, data = HAA6Br)
summary(HAA6Br_model)
```

#### HAA9 levels vs Race served by PWS proportions

<!-- ```{=tex} -->
<!-- \begin{split} -->

<!-- E( \operatorname{LogLevel} ) = &0.68 + -0.35(\operatorname{Prop}) + -0.087(\operatorname{RaceEth}_{\operatorname{Black}}) + -0.047(\operatorname{RaceEth}_{\operatorname{Indig}}) + -0.26(\operatorname{RaceEth}_{\operatorname{White}}) \\ -->
<!-- & + 0.71(\operatorname{Prop} \times \operatorname{RaceEth}_{\operatorname{Black}}) + -0.47(\operatorname{Prop} \times \operatorname{RaceEth}_{\operatorname{Indig}}) + 0.66(\operatorname{Prop} \times \operatorname{RaceEth}_{\operatorname{White}}) -->

<!-- \end{split} -->
<!-- ``` -->

```{r}
HAA9 <- full %>% 
  filter(Contaminant == "HAA9")
  
ggplot(HAA9, aes(x = Prop, y = LogLevel)) +
  geom_point(alpha = 1) +
  geom_smooth(se = FALSE, method = "lm", color = "goldenrod") +
  facet_grid(~ RaceEth, switch = "both", scale = "free") +
  theme_classic() +
  scale_x_continuous(labels = scales::percent)

HAA9_model <- glm(LogLevel ~ Prop * RaceEth, data = HAA9)
summary(HAA9_model)
```

<!-- ```{=tex} -->
<!-- \begin{split} -->

<!-- E( \operatorname{LogLevel} ) = &1.0 + 0.029(\operatorname{Prop}) + 0.015(\operatorname{RaceEth}_{\operatorname{Black}}) + -0.030(\operatorname{RaceEth}_{\operatorname{Indig}}) + -0.28(\operatorname{RaceEth}_{\operatorname{White}}) \\ -->
<!-- & + -0.18(\operatorname{Prop} \times \operatorname{RaceEth}_{\operatorname{Black}}) + -1.7(\operatorname{Prop} \times \operatorname{RaceEth}_{\operatorname{Indig}}) + 0.41(\operatorname{Prop} \times \operatorname{RaceEth}_{\operatorname{White}}) -->

<!-- \end{split} -->
<!-- ``` -->

### Race Kruskal-Wallis tests

```{r}
ggplot(full, aes(x = Predom, y = ContamLevel)) +
  geom_violin(color = "black", fill = "goldenrod") +
  scale_y_log10() +
  facet_wrap(~ Contaminant) +
  theme_classic() +
  labs(title = "Contaminant concentrations by predominant race",
       subtitle = "Note: y-axis is log-adjusted",
       x = "Predominant racial group",
       y = "Contaminant level (\u03bcg/L)")

```

```{r, results = FALSE}
kruskal.test(ContamLevel ~ Predom, data = manganese %>% group_by(PWSID) %>% slice(1))
kruskal.test(ContamLevel ~ Predom, data = germanium %>% group_by(PWSID) %>% slice(1))
kruskal.test(ContamLevel ~ Predom, data = HAA6Br %>% group_by(PWSID) %>% slice(1))
kruskal.test(ContamLevel ~ Predom, data = HAA9 %>% group_by(PWSID) %>% slice(1))
```


## Ethnicity tests

### Ethnicity Kruskal-Wallis

```{r}
ggplot(full, aes(x = HLFiftyPer, y = ContamLevel)) +
  geom_violin(color = "black", fill = "goldenrod") +
  scale_y_log10() +
  facet_wrap(~ Contaminant) +
  theme_classic() +
  labs(title = "Contaminant concentrations by Hispanic/Latin(o/a) percentile",
       subtitle = "Note: y-axis is log-adjusted",
       x = "Hispanic/Latin(o/a) proportion relative to 50th percentile",
       y = "Contaminant level (\u03bcg/L)")
```

```{r, results = FALSE}
kruskal.test(ContamLevel ~ HLFiftyPer, data = germanium %>% group_by(PWSID) %>% slice(1))
kruskal.test(ContamLevel ~ HLFiftyPer, data = manganese %>% group_by(PWSID) %>% slice(1))
kruskal.test(ContamLevel ~ HLFiftyPer, data = HAA6Br %>% group_by(PWSID) %>% slice(1))
kruskal.test(ContamLevel ~ HLFiftyPer, data = HAA9 %>% group_by(PWSID) %>% slice(1))
```

### Ethnicity linear regressions

```{r}
ggplot(full, aes(x = HispLat_prop, y = LogLevel)) +
  geom_point(alpha = .1) +
  geom_smooth(se = FALSE, method = "lm", color = "goldenrod") +
  theme_classic() +
  facet_wrap(~ Contaminant) +
  scale_x_continuous(labels = scales::percent) +
  labs(title = "Contaminant concentrations by proportion of Hispanic/Latin(o/a)",
       x = "Proportion of Hispanic/Latin(o/a) constituents",
       y = "Concentration (log-transformed \u03bcg/L)")

germanium_model_eth <- glm(LogLevel ~ HispLat_prop, data = germanium)
summary(germanium_model_eth)

manganese_model_eth <- glm(LogLevel ~ HispLat_prop, data = manganese)
summary(manganese_model_eth)

HAA6Br_model_eth <- glm(LogLevel ~ HispLat_prop, data = HAA6Br)
summary(HAA6Br_model_eth)

HAA9_model_eth <- glm(LogLevel ~ HispLat_prop, data = HAA9)
summary(HAA9_model_eth)
```
