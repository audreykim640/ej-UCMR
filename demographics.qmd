---
title: "Demographic joins"
format: html
editor: visual
---

## Demographics

```{r}
library(dplyr)
library(ggplot2)
# install.packages("sf") # https://github.com/r-spatial/sf/issues/2035
library(sf)
library(tidycensus)
options(tigris_use_cache = TRUE)
library(tidyr)
library(purrr)
library(lwgeom)
```


```{r}
bg_shapes <- get_acs(
  geography = "block group", 
  variables = c("B02001_001", "B02001_002", "B02009_001", "B02010_001", 
                "B02011_001", "B19013_001", "B03003_001", "B03003_003"),
  state = "CA", 
  year = 2020,
  cache_table = TRUE,
  geometry = TRUE
) 

govwatershapes <- st_read("data/SABL_Public_230403") %>% 
  rename("PWSID" = "SABL_PWSID")
```

Race total: B02001_001 
White alone B02001_002 
B02009_001 Black alone or in combination 
B02010_001 Native American alone or in combination 
B02011_001 Asian alone or in combination 
B19013_001 median household income 
Hispanic total: B03003_001 
B03003_003 yes hispanic or latino

```{r}
bg_shapes_wide <- bg_shapes %>% 
  select(-moe) %>% 
  pivot_wider(names_from = "variable", values_from = "estimate") %>% 
  rename(Total = B02001_001,	
        White = B02001_002,	
        Black = B02009_001,
        Indigenous = B02010_001,	
        Asian = B02011_001,
        Total_Hisp = B03003_001,	
        Hisp_Lat = B03003_003,
        Med_Income = B19013_001) #%>% 
  # mutate(White = White / Total,
  #        Black = Black / Total,
  #        Indigenous = Indigenous / Total,
  #        Asian = Asian / Total,
  #        Hisp_Lat = Hisp_Lat / Total_Hisp
  #        )

  # Save until after having joined since weighted averages won't work with props
  # Want to use counts

# block_shapes_tall_props <- block_shapes_wide %>% 
#   pivot_longer(c(White, Black, Asian, Indigenous, Hisp_Lat), 
#                names_to = "race", values_to = "prop")
# 
# ggplot(block_shapes_tall2, aes(x = race, y = prop, color = race)) + geom_col()
# 
# block_shapes_vals <- block_shapes %>% 
#   filter(!(Total == 0 & Total_Hisp == 0))
```


```{r}
# below lines sourced from https://github.com/r-spatial/sf/issues/493
sf_use_s2(FALSE) # flattens shapes
bg_shapes_wide <- st_transform(bg_shapes_wide, 4269) %>% 
  st_make_valid() # make types compatible
govwatershapes <- st_transform(govwatershapes, 4269) %>% 
  st_make_valid()

# join <- watershapes %>% 
#   inner_join(UCMR_CA, by = c("pwsid" = "PWSID")) %>% 
#   select(pwsid, PWSName, primacy_agency_code, primary_source_code, tier, FacilityWaterType, CollectionDate, Contaminant, MRL, AnalyticalResultsSign, AnalyticalResultValue.Âµg.L.) %>% 
#   st_intersection(bg_shapes) %>% 
#   mutate(pwi_county = paste0(pwsid, "-", GEOID))


# PWS_demos_joined <- st_join(govwatershapes, bg_shapes_wide)

shape_intersections <- st_intersection(govwatershapes, bg_shapes_wide) %>% 
  mutate(PWS_bg = paste0(PWSID, "-", GEOID))


PWS_aw_demographics <- shape_intersections %>% 
  #--- get area ---#
  mutate(area = as.numeric(st_area(.))) %>% 
  #--- get area-weight by HUC unit ---#
  group_by(PWSID) %>% 
  mutate(weight = area / sum(area)) %>% 
  #--- calculate area-weighted corn acreage by HUC unit ---#
  # 'aw' stands for area-weighted 
  summarize(Total_aw = sum(weight * Total),
            White_aw = sum(weight * White),
            Black_aw = sum(weight * Black),
            Indig_aw = sum(weight * Indigenous),
            Asian_aw = sum(weight * Asian),
            Total_HispLat_aw = sum(weight * Total_Hisp),
            HispLat_aw = sum(weight * Hisp_Lat),
            MedIncome_aw = sum(weight * Med_Income),
            )

# saving for posterity (to not have to rerun code)
st_write(PWS_aw_demographics, dsn = 'data/joinedPWSdemos/joinedPWSdemos.shp')

test <- st_read("data/joinedPWSdemos")
```

Create bool for yes, all present Create categorical for "predominantly \_\_\_ population"
